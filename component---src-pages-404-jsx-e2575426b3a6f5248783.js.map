{"version":3,"sources":["webpack:///./src/pages/404.jsx","webpack:///./src/components/seo.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_components_section__WEBPACK_IMPORTED_MODULE_3__","grommet__WEBPACK_IMPORTED_MODULE_4__","NotFoundPage","a","createElement","title","margin","horizontal","vertical","pad","align","elevation","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","_config__WEBPACK_IMPORTED_MODULE_2__","_config__WEBPACK_IMPORTED_MODULE_2___default","SEO","_ref2","postData","postImage","isBlogPost","postMeta","frontmatter","config","description","excerpt","image","url","path","schemaOrgJSONLD","_ref","@context","@type","name","alternateName","push","itemListElement","position","item","@id","headline","author","titleShort","mainEntityOfPage","getSchemaOrgJSONLD","content","lang","amp","type","JSON","stringify","rel","href","property","twitter","defaultProps"],"mappings":"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","file":"component---src-pages-404-jsx-e2575426b3a6f5248783.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Section from \"../components/section\"\nimport { Box } from \"grommet\"\nimport App from \"../components/layout\"\n\nconst NotFoundPage = () => (\n  <App title=\"About this blog\">\n  <Section>\n    <Box\n      margin={{ horizontal: `xlarge`, vertical: `small` }}\n      pad=\"medium\"\n      align=\"center\"\n      elevation=\"medium\"\n    >\n      <SEO title=\"404: Not found\" />\n      <h1>NOT FOUND</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Box>\n  </Section>\n</App>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport PropTypes from \"prop-types\"\nimport config from \"../config\"\n\nconst getSchemaOrgJSONLD = ({ url, title, image, description, isBlogPost }) => {\n  const schemaOrgJSONLD = [\n    {\n      \"@context\": `http://schema.org`,\n      \"@type\": `WebSite`,\n      url,\n      name: title,\n      alternateName: config.title,\n    },\n  ]\n  if (isBlogPost) {\n    schemaOrgJSONLD.push([\n      {\n        \"@context\": `http://schema.org`,\n        \"@type\": `BreadcrumbList`,\n        itemListElement: [\n          {\n            \"@type\": `ListItem`,\n            position: 1,\n            item: {\n              \"@id\": url,\n              name: title,\n              image,\n            },\n          },\n        ],\n      },\n      {\n        \"@context\": `http://schema.org`,\n        \"@type\": `BlogPosting`,\n        url,\n        name: title,\n        alternateName: config.title,\n        headline: title,\n        image: {\n          \"@type\": `ImageObject`,\n          url: image,\n        },\n        description,\n        author: {\n          \"@type\": `Person`,\n          name: config.titleShort,\n        },\n        mainEntityOfPage: {\n          \"@type\": `WebSite`,\n          \"@id\": config.url,\n        },\n      },\n    ])\n  }\n  return schemaOrgJSONLD\n}\n\nconst SEO = ({ postData, postImage, isBlogPost }) => {\n  const postMeta = postData.frontmatter || {}\n\n  const title = postMeta.title || config.title\n  const description = postData.excerpt || config.description\n  const image = `${config.url}${postImage}`\n  const url = postMeta.path ? `${config.url}${postMeta.path}` : config.url\n\n  const schemaOrgJSONLD = getSchemaOrgJSONLD({\n    url,\n    title,\n    image,\n    description,\n    isBlogPost,\n  })\n\n  return (\n    <Helmet>\n      {/* General tags */}\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n      <title>{title}</title>\n      <meta name=\"theme-color\" content=\"#EEEEEE\" />\n      <html lang=\"en\" amp />\n\n      {/* Schema.org tags */}\n      <script type=\"application/ld+json\">\n        {JSON.stringify(schemaOrgJSONLD)}\n      </script>\n\n      {/* Google webmaster */}\n      {url === config.url && (\n        <meta\n          name=\"google-site-verification\"\n          content=\"YUxxWy9eAbuiQ86l-TiUk1SvM5hAnrtNBf6qA9uwFXk\"\n        />\n      )}\n      <link rel=\"manifest\" href=\"/manifest.webmanifest\" />\n\n      {/* OpenGraph tags */}\n      <meta property=\"og:url\" content={url} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n\n      {/* Twitter Card tags */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={config.twitter} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  )\n}\n\nSEO.propTypes = {\n  isBlogPost: PropTypes.bool,\n  postData: PropTypes.shape({\n    frontmatter: PropTypes.any,\n    excerpt: PropTypes.any,\n  }),\n  postImage: PropTypes.string,\n}\n\nSEO.defaultProps = {\n  postImage: null,\n  isBlogPost: false,\n  postData: {},\n}\n\nexport default SEO\n"],"sourceRoot":""}