{"version":3,"sources":["webpack:///./node_modules/lodash/_baseSample.js","webpack:///./node_modules/lodash/_baseValues.js","webpack:///./node_modules/lodash/values.js","webpack:///./node_modules/lodash/_arraySample.js","webpack:///./src/templates/list.jsx","webpack:///./node_modules/lodash/sample.js","webpack:///./node_modules/lodash/_baseRandom.js"],"names":["arraySample","values","module","exports","collection","arrayMap","object","props","key","baseValues","keys","baseRandom","array","length","undefined","List","pageContext","posts","title","type","coords","coordinates","config","titleShort","capitalize","alignSelf","margin","vertical","cities","zoom","center","Consumer","size","columns","limit","baseSample","isArray","nativeFloor","Math","floor","nativeRandom","random","lower","upper"],"mappings":"iFAAA,IAAIA,EAAc,EAAQ,QACtBC,EAAS,EAAQ,QAarBC,EAAOC,QAJP,SAAoBC,GAClB,OAAOJ,EAAYC,EAAOG,M,qBCX5B,IAAIC,EAAW,EAAQ,QAkBvBH,EAAOC,QANP,SAAoBG,EAAQC,GAC1B,OAAOF,EAASE,GAAO,SAASC,GAC9B,OAAOF,EAAOE,Q,uBCdlB,IAAIC,EAAa,EAAQ,QACrBC,EAAO,EAAQ,QAgCnBR,EAAOC,QAJP,SAAgBG,GACd,OAAiB,MAAVA,EAAiB,GAAKG,EAAWH,EAAQI,EAAKJ,M,qBC9BvD,IAAIK,EAAa,EAAQ,QAczBT,EAAOC,QALP,SAAqBS,GACnB,IAAIC,EAASD,EAAMC,OACnB,OAAOA,EAASD,EAAMD,EAAW,EAAGE,EAAS,SAAMC,I,gMC8BtCC,UA5Bf,YAAgC,IAAhBC,EAAe,EAAfA,YACNC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAChBC,EAASC,YAAYJ,GAC3B,OACE,kBAAC,IAAD,CAAKC,MAAUI,IAAOC,WAAZ,MAA4BC,YAAWN,IAC1C,QAAJC,GACC,kBAAC,IAAD,CAAKM,UAAU,SAASC,OAAQ,CAAEC,SAAS,UAEtBb,MAApB,IAASM,IACR,kBAAC,IAAD,CAAKQ,OAAQR,EAAQS,KAAM,EAAGC,OAAQ,IAASV,GAAQC,eAI3D,kBAAC,IAAkBU,SAAnB,MACG,SAAAC,GAAI,OACH,kBAAC,IAAD,CAASC,QAASD,GAAI,UACpB,kBAAC,IAAD,CAAOf,MAAOA,EAAOiB,OAAO,W,qBC7BxC,IAAIlC,EAAc,EAAQ,QACtBmC,EAAa,EAAQ,QACrBC,EAAU,EAAQ,QAqBtBlC,EAAOC,QALP,SAAgBC,GAEd,OADWgC,EAAQhC,GAAcJ,EAAcmC,GACnC/B,K,mBCnBd,IAAIiC,EAAcC,KAAKC,MACnBC,EAAeF,KAAKG,OAexBvC,EAAOC,QAJP,SAAoBuC,EAAOC,GACzB,OAAOD,EAAQL,EAAYG,KAAkBG,EAAQD,EAAQ","file":"component---src-templates-list-jsx-338ff687fb0d8e9a66db.js","sourcesContent":["var arraySample = require('./_arraySample'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.sample`.\n *\n * @private\n * @param {Array|Object} collection The collection to sample.\n * @returns {*} Returns the random element.\n */\nfunction baseSample(collection) {\n  return arraySample(values(collection));\n}\n\nmodule.exports = baseSample;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.sample` for arrays.\n *\n * @private\n * @param {Array} array The array to sample.\n * @returns {*} Returns the random element.\n */\nfunction arraySample(array) {\n  var length = array.length;\n  return length ? array[baseRandom(0, length - 1)] : undefined;\n}\n\nmodule.exports = arraySample;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport _ from \"lodash\"\nimport { Box, ResponsiveContext } from \"grommet\"\nimport config from \"../config\"\n\nimport App from \"../components/layout\"\nimport Map from \"../components/map\"\nimport Section from \"../components/section\"\nimport Posts from \"../components/posts\"\nimport { coordinates, capitalize } from \"../tools\"\n\n{/* FIXED: take app title short from config.js */}\nfunction List({ pageContext }) {\n  const { posts, title, type } = pageContext\n  const coords = coordinates(posts)\n  return (\n    <App title={`${config.titleShort} - ${capitalize(title)}`}>\n      {type !== `tag` && (\n        <Box alignSelf=\"center\" margin={{ vertical: `small` }}>\n        {/* FIXED: only show map when at least one coordinate is set */}\n        {_.sample(coords) != undefined && (\n          <Map cities={coords} zoom={3} center={_.sample(coords).coordinates} />\n        )}\n        </Box>\n      )}\n      <ResponsiveContext.Consumer>\n        {size => (\n          <Section columns={size || `medium`}>\n            <Posts posts={posts} limit={false} />\n          </Section>\n        )}\n      </ResponsiveContext.Consumer>\n    </App>\n  )\n}\n\nList.propTypes = {\n  pageContext: PropTypes.shape().isRequired,\n}\n\nexport default List\n","var arraySample = require('./_arraySample'),\n    baseSample = require('./_baseSample'),\n    isArray = require('./isArray');\n\n/**\n * Gets a random element from `collection`.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to sample.\n * @returns {*} Returns the random element.\n * @example\n *\n * _.sample([1, 2, 3, 4]);\n * // => 2\n */\nfunction sample(collection) {\n  var func = isArray(collection) ? arraySample : baseSample;\n  return func(collection);\n}\n\nmodule.exports = sample;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n"],"sourceRoot":""}