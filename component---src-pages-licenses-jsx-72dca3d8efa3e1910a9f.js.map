{"version":3,"sources":["webpack:///./src/pages/licenses.jsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","grommet__WEBPACK_IMPORTED_MODULE_1__","_config__WEBPACK_IMPORTED_MODULE_2__","_config__WEBPACK_IMPORTED_MODULE_2___default","_components_section__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_tools__WEBPACK_IMPORTED_MODULE_6__","Licenses","_ref","data","a","createElement","postImage","file","childImageSharp","fluid","src","postData","frontmatter","title","config","path","margin","horizontal","vertical","pad","align","elevation","renderAst","markdownRemark","htmlAst"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAAO,EAAAE,GAAAE,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAA,KA0CO,IAAMI,EAAS,aAsBPW,UApDf,SAAAC,GAA4B,IAARC,EAAQD,EAARC,KAClB,OACEX,EAAAY,EAAAC,cAACd,EAAA,SAAD,KACEC,EAAAY,EAAAC,cAACP,EAAA,EAAD,CACEQ,UAAWH,EAAKI,KAAKC,gBAAgBC,MAAMC,IAC3CC,SAAU,CACRC,YAAa,CACXC,MAAK,cAAgBC,IAAOD,MAC5BE,KAAI,sBAIVvB,EAAAY,EAAAC,cAACN,EAAA,EAAD,CAAKc,MAAM,YACTrB,EAAAY,EAAAC,cAACR,EAAA,EAAD,KACEL,EAAAY,EAAAC,cAACX,EAAA,EAAD,CACEsB,OAAQ,CAAEC,WAAU,SAAYC,SAAQ,SACxCC,IAAI,SACJC,MAAM,SACNC,UAAU,UAETC,YAAUnB,EAAKoB,eAAeC","file":"component---src-pages-licenses-jsx-72dca3d8efa3e1910a9f.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql } from \"gatsby\"\nimport { Box } from \"grommet\"\nimport config from \"../config\"\n\nimport Section from \"../components/section\"\nimport Seo from \"../components/seo\"\nimport App from \"../components/layout\"\nimport { renderAst } from \"../tools\"\n\n{/* FIXED: replace SEO title with config.title */}\nfunction Licenses({ data }) {\n  return (\n    <Fragment>\n      <Seo\n        postImage={data.file.childImageSharp.fluid.src}\n        postData={{\n          frontmatter: {\n            title: `Licenses - ${config.title}`,\n            path: `/about/licenses`,\n          },\n        }}\n      />\n      <App title=\"Licenses\">\n        <Section>\n          <Box\n            margin={{ horizontal: `xlarge`, vertical: `small` }}\n            pad=\"medium\"\n            align=\"center\"\n            elevation=\"medium\"\n          >\n            {renderAst(data.markdownRemark.htmlAst)}\n          </Box>\n        </Section>\n      </App>\n    </Fragment>\n  )\n}\n\n{/* FIXED use me.jpg instead of up.jpg */}\n{/* FIXED use GatsbyImageSharpFluid_withWebp */}\nexport const pageQuery = graphql`\n  query LicensesQuery {\n    file(relativePath: { eq: \"about/me.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 800, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    markdownRemark(frontmatter: { path: { eq: \"/about/licenses\" } }) {\n      htmlAst\n      frontmatter {\n        path\n      }\n    }\n  }\n`\n\nLicenses.propTypes = {\n  data: PropTypes.shape().isRequired,\n}\n\nexport default Licenses\n"],"sourceRoot":""}